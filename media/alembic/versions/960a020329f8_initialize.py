# -*- coding: utf-8 -*-

"""initialize

Revision ID: 960a020329f8
Revises:
Create Date: 2020-04-07 21:53:03.499040

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy_utils.types.encrypted.encrypted_type import StringEncryptedType

# revision identifiers, used by Alembic.
revision = '960a020329f8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    ###############################################
    # Tables and column additions for media service
    ###############################################

    op.create_table('pictures',
    sa.Column('id', sa.String(length=16), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('path', sa.String(length=64), server_default='', nullable=False),
    sa.Column('caption', sa.String(length=255), nullable=True),
    sa.Column('uid', sa.String(length=16), nullable=False),
    sa.Column('size', sa.BIGINT(), nullable=True),
    sa.Column('sha1', sa.LargeBinary(length=20), nullable=True),
    sa.Column('sha256', sa.LargeBinary(length=32), nullable=True),
    sa.Column('thumbnail50x50', sa.BLOB(), nullable=True),
    sa.Column('format_original', sa.Enum('gif', 'heic', 'heif', 'ico', 'jpeg', 'mov', 'mp4', 'png', 'wmv'), nullable=True),
    sa.Column('is_encrypted', sa.BOOLEAN(), server_default=sa.text('0'), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('compression', sa.String(length=16), nullable=True),
    sa.Column('datetime_original', sa.TIMESTAMP(), nullable=True),
    sa.Column('gps_altitude', sa.Float(), nullable=True),
    sa.Column('geolat', sa.INTEGER(), nullable=True),
    sa.Column('geolong', sa.INTEGER(), nullable=True),
    sa.Column('height', sa.INTEGER(), nullable=True),
    sa.Column('make', sa.String(length=16), nullable=True),
    sa.Column('model', sa.String(length=32), nullable=True),
    sa.Column('orientation', sa.SMALLINT(), nullable=True),
    sa.Column('width', sa.INTEGER(), nullable=True),
    sa.Column('privacy', sa.String(length=8), server_default='invitee', nullable=False),
    sa.Column('category_id', sa.String(length=16), nullable=False),
    sa.Column('storage_id', sa.String(length=16), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('modified', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.Enum('active', 'disabled'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['storage_id'], ['storageitems.id'], ),
    sa.ForeignKeyConstraint(['uid'], ['people.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )

    op.create_table('albums',
    sa.Column('id', sa.String(length=16), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('sizes', sa.String(length=32), server_default='120,720', nullable=False),
    sa.Column('encryption', sa.Enum('aes'), nullable=True),
    sa.Column('password', StringEncryptedType(sa.String(), length=64), nullable=True),
    sa.Column('uid', sa.String(length=16), nullable=False),
    sa.Column('list_id', sa.String(length=16), nullable=True),
    sa.Column('event_id', sa.String(length=16), nullable=True),
    sa.Column('cover_id', sa.String(length=16), nullable=True),
    sa.Column('category_id', sa.String(length=16), nullable=False),
    sa.Column('privacy', sa.String(length=8), server_default='invitee', nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('modified', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.Enum('active', 'disabled'), server_default='active', nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['cover_id'], ['pictures.id'], ),
    sa.ForeignKeyConstraint(['list_id'], ['lists.id'], ),
    sa.ForeignKeyConstraint(['uid'], ['people.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name', 'uid', name='uniq_album_user')
    )

    """ TODO - figure out how to better handle the monolith split
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.create_foreign_key('messages_fk1', 'albums', ['album_id'], ['id'])
    """
    with op.batch_alter_table('profileitems', schema=None) as batch_op:
        batch_op.add_column(sa.Column('album_id', sa.String(length=16), nullable=True))
        batch_op.create_foreign_key('albums_fk1', 'albums', ['album_id'], ['id'])

    op.create_table('albumcontents',
    sa.Column('album_id', sa.String(length=16), primary_key=True, nullable=False),
    sa.Column('picture_id', sa.String(length=16), primary_key=True, nullable=False),
    sa.Column('rank', sa.Float(), nullable=True),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['albums.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['picture_id'], ['pictures.id'], ondelete='CASCADE'),
    )
    with op.batch_alter_table('albumcontents', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_albumcontents_picture_id'), ['picture_id'], unique=False)

    op.create_table('files',
    sa.Column('id', sa.String(length=16), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('path', sa.String(length=64), nullable=False),
    sa.Column('mime_type', sa.String(length=32), server_default='text/plain', nullable=False),
    sa.Column('size', sa.BIGINT(), nullable=True),
    sa.Column('sha1', sa.LargeBinary(length=20), nullable=True),
    sa.Column('sha256', sa.LargeBinary(length=32), nullable=True),
    sa.Column('storage_id', sa.String(length=16), nullable=True),
    sa.Column('privacy', sa.String(length=8), server_default='member', nullable=False),
    sa.Column('list_id', sa.String(length=16), nullable=True),
    sa.Column('event_id', sa.String(length=16), nullable=True),
    sa.Column('uid', sa.String(length=16), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('modified', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.Enum('active', 'disabled'), server_default='active', nullable=False),
    sa.ForeignKeyConstraint(['storage_id'], ['storageitems.id'], ),
    sa.ForeignKeyConstraint(['list_id'], ['lists.id'], ),
    sa.ForeignKeyConstraint(['uid'], ['people.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )

    with op.batch_alter_table('files', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_files_uid'), ['uid'], unique=False)

    # ### end Alembic commands ###
